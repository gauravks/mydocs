
@book{gokhale_reconfigurable_2010,
	edition = {1st},
	title = {Reconfigurable {Computing}: {Accelerating} {Computation} with {Field}-{Programmable} {Gate} {Arrays}},
	isbn = {978-1-4419-3865-7},
	shorttitle = {Reconfigurable {Computing}},
	abstract = {A one-of-a-kind survey of the field of Reconfigurable Computing Gives a comprehensive introduction to a discipline that offers a 10X-100X acceleration of algorithms over microprocessors Discusses the impact of reconfigurable hardware on a wide range of applications: signal and image processing, network security, bioinformatics, and supercomputing Includes the history of the field as well as recent advances Includes an extensive bibliography of primary sources},
	publisher = {Springer Publishing Company, Incorporated},
	author = {Gokhale, Maya B. and Graham, Paul S.},
	year = {2010},
	file = {Gokhale and Graham - 2010 - Reconfigurable Computing Accelerating Computation.pdf:C\:\\Users\\gaura\\Zotero\\storage\\9HACJ8VK\\Gokhale and Graham - 2010 - Reconfigurable Computing Accelerating Computation.pdf:application/pdf}
}

@article{ekanayake_cloud_2011,
	title = {Cloud {Technologies} for {Bioinformatics} {Applications}},
	volume = {22},
	issn = {1045-9219},
	doi = {10.1109/TPDS.2010.178},
	abstract = {Executing large number of independent jobs or jobs comprising of large number of tasks that perform minimal intertask communication is a common requirement in many domains. Various technologies ranging from classic job schedulers to the latest cloud technologies such as MapReduce can be used to execute these "many-tasks” in parallel. In this paper, we present our experience in applying two cloud technologies Apache Hadoop and Microsoft DryadLINQ to two bioinformatics applications with the above characteristics. The applications are a pairwise Alu sequence alignment application and an Expressed Sequence Tag (EST) sequence assembly program. First, we compare the performance of these cloud technologies using the above applications and also compare them with traditional MPI implementation in one application. Next, we analyze the effect of inhomogeneous data on the scheduling mechanisms of the cloud technologies. Finally, we present a comparison of performance of the cloud technologies under virtual and nonvirtual hardware platforms.},
	number = {6},
	journal = {IEEE Transactions on Parallel and Distributed Systems},
	author = {Ekanayake, J. and Gunarathne, T. and Qiu, J.},
	month = jun,
	year = {2011},
	keywords = {Apache Hadoop, bioinformatics, Bioinformatics, cloud computing, cloud technologies, Clouds, Distributed programming, expressed sequence tag, Instruction sets, intertask communication, job schedulers, Matrix decomposition, message passing, Microsoft DryadLINQ, MPI implementation, parallel systems, performance, Pipelines, Programming, programming paradigms., Runtime, scheduling, sequence assembly program},
	pages = {998--1011},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\gaura\\Zotero\\storage\\IYEZH6CJ\\5611496.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\TM6U7HDN\\Ekanayake et al. - 2011 - Cloud Technologies for Bioinformatics Applications.pdf:application/pdf}
}

@incollection{wienbrandt_improvement_2012,
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Improvement of {BLASTp} on the {FPGA}-{Based} {High}-{Performance} {Computer} {RIVYERA}},
	isbn = {978-3-642-30190-2 978-3-642-30191-9},
	url = {https://link.springer.com/chapter/10.1007/978-3-642-30191-9_26},
	abstract = {NCBI BLASTp plays the major role of protein database searches already for years. However, with today’s growth of sequence database sizes, it becomes more inefficient with standard PC architectures. One solution to address this problem was already presented in our previous implementation, published in [16], taking advantages of the massive parallelization provided by the FPGA-based high-performance computer RIVYERA [3].The analysis of bottlenecks in our BLASTp pipeline showed the urgent need to speed up the two-hit finder component, as well as the postprocessing on the PC. After a complete redesign of the two-hit finder and the insertion of a new “gapped extension” filter, we achieve a speedup of up to 376, compared to one thread of a fully utilized 2x Intel Xeon E5520 PC system at 2.26{\textbackslash}ensuremathGHz2.26{\textbackslash}ensuremathGHz2.26{\textbackslash}ensuremath\{{\textbackslash}mathrm\{GHz\}\} running original NCBI BLASTp v. 2.2.25+. This is about two times the performance of our previous implementation.},
	language = {en},
	urldate = {2018-06-03},
	booktitle = {Bioinformatics {Research} and {Applications}},
	publisher = {Springer, Berlin, Heidelberg},
	author = {Wienbrandt, Lars and Siebert, Daniel and Schimmler, Manfred},
	month = may,
	year = {2012},
	doi = {10.1007/978-3-642-30191-9_26},
	pages = {275--286},
	file = {Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\IBAS7X6I\\Wienbrandt et al. - 2012 - Improvement of BLASTp on the FPGA-Based High-Perfo.pdf:application/pdf;Snapshot:C\:\\Users\\gaura\\Zotero\\storage\\5N99YABY\\10.html:text/html}
}

@article{altschul_basic_1990,
	title = {Basic local alignment search tool},
	volume = {215},
	issn = {0022-2836},
	url = {http://www.sciencedirect.com/science/article/pii/S0022283605803602},
	doi = {10.1016/S0022-2836(05)80360-2},
	abstract = {A new approach to rapid sequence comparison, basic local alignment search tool (BLAST), directly approximates alignments that optimize a measure of local similarity, the maximal segment pair (MSP) score. Recent mathematical results on the stochastic properties of MSP scores allow an analysis of the performance of this method as well as the statistical significance of alignments it generates. The basic algorithm is simple and robust; it can be implemented in a number of ways and applied in a variety of contexts including straight-forward DNA and protein sequence database searches, motif searches, gene identification searches, and in the analysis of multiple regions of similarity in long DNA sequences. In addition to its flexibility and tractability to mathematical analysis, BLAST is an order of magnitude faster than existing sequence comparison tools of comparable sensitivity.},
	number = {3},
	urldate = {2018-06-03},
	journal = {Journal of Molecular Biology},
	author = {Altschul, Stephen F. and Gish, Warren and Miller, Webb and Myers, Eugene W. and Lipman, David J.},
	month = oct,
	year = {1990},
	pages = {403--410},
	file = {ScienceDirect Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\WMZLBUQM\\Altschul et al. - 1990 - Basic local alignment search tool.pdf:application/pdf;ScienceDirect Snapshot:C\:\\Users\\gaura\\Zotero\\storage\\8NR8FSEN\\S0022283605803602.html:text/html}
}

@article{karanam_using_2006,
	title = {Using {FPGA}-{Based} {Hybrid} {Computers} for {Bioinformatics} {Applications}},
	language = {en},
	number = {58},
	journal = {Xcell Journal Third Quarter},
	author = {Karanam, Ravi Kiran and Ravindran, Arun and Mukherjee, Arindam and Gibas, Cynthia and Wilkinson, Anthony Barry},
	year = {2006},
	pages = {80--84},
	file = {Karanam - 2006 - Using FPGA-Based Hybrid Computers for Bioinformati.pdf:C\:\\Users\\gaura\\Zotero\\storage\\5CIQY3FH\\Karanam - 2006 - Using FPGA-Based Hybrid Computers for Bioinformati.pdf:application/pdf}
}

@article{abbas_combining_2015,
	title = {Combining execution pipelines to improve parallel implementation of {HMMER} on {FPGA}},
	volume = {39},
	issn = {0141-9331},
	url = {http://www.sciencedirect.com/science/article/pii/S014193311500085X},
	doi = {10.1016/j.micpro.2015.06.006},
	abstract = {HMMER is a widely used tool in bioinformatic, based on the Profile Hidden Markov Models. The computation kernels of HMMER, namely MSV and P7Viterbi are very compute intensive, and their data dependencies if interpreted naively, lead to a purely sequential execution. In this paper, we propose a original parallelization scheme for HMMER by rewriting the mathematical formulation, to expose hidden potential parallelization opportunities. Our parallelization scheme targets FPGA technology, and our architecture can achieve 10 times speedup compared with the latest HMMER3 SSE version, without compromising on the sensitivity of original algorithm.},
	number = {7},
	urldate = {2018-06-03},
	journal = {Microprocessors and Microsystems},
	author = {Abbas, Naeem and Derrien, Steven and Rajopadhye, Sanjay and Quinton, Patrice and Cornu, Alexandre and Lavenier, Dominique},
	month = oct,
	year = {2015},
	keywords = {Bioinformatics, Acceleration, FPGA, HMMER, Parallelization},
	pages = {457--470},
	file = {ScienceDirect Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\ZHGIUA9W\\Abbas et al. - 2015 - Combining execution pipelines to improve parallel .pdf:application/pdf;ScienceDirect Snapshot:C\:\\Users\\gaura\\Zotero\\storage\\K7UAFIE6\\S014193311500085X.html:text/html}
}

@article{oliver_integrating_2008,
	series = {High-{Performance} {Computational} {Biology}},
	title = {Integrating {FPGA} acceleration into {HMMer}},
	volume = {34},
	issn = {0167-8191},
	url = {http://www.sciencedirect.com/science/article/pii/S0167819108001002},
	doi = {10.1016/j.parco.2008.08.003},
	abstract = {HMMer is a commonly used package for biological sequence database searching with profile hidden Markov model (HMMs). It allows researchers to compare HMMs to sequence databases or sequences to HMM databases. However, such searches often take many hours on traditional computer architectures. These runtime requirements are likely to become even more severe due to the rapid growth in size of both sequence and model databases. We present a new reconfigurable architecture to accelerate the two HMMer database search procedures hmmsearch and hmmpfam. It is described how this leads to significant runtime savings on off-the-shelf field-programmable gate arrays (FPGAs).},
	number = {11},
	urldate = {2018-06-03},
	journal = {Parallel Computing},
	author = {Oliver, Tim and Yeow, Leow Yuan and Schmidt, Bertil},
	month = nov,
	year = {2008},
	keywords = {Bioinformatics, Accelerators, Hidden Markov models, Reconfigurable computing, Viterbi algorithm},
	pages = {681--691},
	file = {ScienceDirect Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\QRPD8YAP\\Oliver et al. - 2008 - Integrating FPGA acceleration into HMMer.pdf:application/pdf;ScienceDirect Snapshot:C\:\\Users\\gaura\\Zotero\\storage\\2JLFJ6PE\\S0167819108001002.html:text/html}
}

@article{wienbrandt_fast_2017,
	series = {International {Conference} on {Computational} {Science}, {ICCS} 2017, 12-14 {June} 2017, {Zurich}, {Switzerland}},
	title = {Fast {Genome}-{Wide} {Third}-order {SNP} {Interaction} {Tests} with {Information} {Gain} on a {Low}-cost {Heterogeneous} {Parallel} {FPGA}-{GPU} {Computing} {Architecture}},
	volume = {108},
	issn = {1877-0509},
	url = {http://www.sciencedirect.com/science/article/pii/S1877050917308037},
	doi = {10.1016/j.procs.2017.05.210},
	abstract = {Complex diseases may result from many genetic variants interacting with each other. For this reason, genome-wide interaction studies (GWIS) are currently performed to detect pairwise SNP interactions. While the computations required here can be completed within reasonable time, it has been inconvenient yet to detect third-order SNP interactions for large-scale datasets due to the cubic complexity of the problem. In this paper we introduce a feasible method for third-order GWIS analysis of genotyping data on a low-cost heterogeneous computing system that combines a Virtex-7 FPGA and a GeForce GTX 780 Ti GPU, with speedups between 70 and 90 against a CPU-only approach and a speedup of approx. 5 against a GPU-only approach. To estimate effect sizes of third-order interactions we employed information gain (IG), a measure that has been applied on a genome-wide scale only for pairwise interactions in the literature yet.},
	urldate = {2018-06-03},
	journal = {Procedia Computer Science},
	author = {Wienbrandt, Lars and Kassens, Jan Christian and Hübenthal, Matthias and Ellinghaus, David},
	month = jan,
	year = {2017},
	keywords = {FPGA, entropy, epistasis, GPU, GWIS, heterogeneous architectures, hybrid computing, information gain, information theory, mutual information, three-way SNP interactions},
	pages = {596--605},
	file = {ScienceDirect Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\23SZT7X3\\Wienbrandt et al. - 2017 - Fast Genome-Wide Third-order SNP Interaction Tests.pdf:application/pdf;ScienceDirect Snapshot:C\:\\Users\\gaura\\Zotero\\storage\\WDLHCPJ4\\S1877050917308037.html:text/html}
}

@article{smith_identification_1981,
	title = {Identification of common molecular subsequences},
	volume = {147},
	issn = {0022-2836},
	url = {http://www.sciencedirect.com/science/article/pii/0022283681900875},
	doi = {10.1016/0022-2836(81)90087-5},
	number = {1},
	urldate = {2018-06-03},
	journal = {Journal of Molecular Biology},
	author = {Smith, T. F. and Waterman, M. S.},
	month = mar,
	year = {1981},
	pages = {195--197},
	file = {ScienceDirect Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\DQRE3KKC\\Smith and Waterman - 1981 - Identification of common molecular subsequences.pdf:application/pdf;ScienceDirect Snapshot:C\:\\Users\\gaura\\Zotero\\storage\\WEYW6JJ6\\0022283681900875.html:text/html}
}

@incollection{wienbrandt_fpga-based_2014,
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {The {FPGA}-{Based} {High}-{Performance} {Computer} {RIVYERA} for {Applications} in {Bioinformatics}},
	isbn = {978-3-319-08018-5 978-3-319-08019-2},
	url = {https://link.springer.com/chapter/10.1007/978-3-319-08019-2_40},
	abstract = {Bioinformatics specifies a wide field of applications with generally long runtimes or huge amounts of data to be processed – or even both. Typically, large computing clusters or special computing platforms are harnessed to solve problems in this field in reasonable time. One such platform is represented by the FPGA-based high-performance computer RIVYERA, which was intentionally developed for problems in cryptanalysis. On the basis of three easy examples taken from our current research field, we show how RIVYERA can be applied to different kinds of problems regarding bioinformatics. RIVYERA is able to significantly speed up the process of exact sequence alignment using the Smith-Waterman [1] algorithm, querying protein sequence databases using BLASTp [2], and running genome-wide association studies (GWAS) using iLOCI [3] or similar methods based on contingency tables. Likewise, energy savings with RIVYERA are in the same order as runtime reductions compared to standard PCs or computing clusters.},
	language = {en},
	urldate = {2018-06-03},
	booktitle = {Language, {Life}, {Limits}},
	publisher = {Springer, Cham},
	author = {Wienbrandt, Lars},
	month = jun,
	year = {2014},
	doi = {10.1007/978-3-319-08019-2_40},
	pages = {383--392},
	file = {Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\Q7WCHMFD\\Wienbrandt - 2014 - The FPGA-Based High-Performance Computer RIVYERA f.pdf:application/pdf;Snapshot:C\:\\Users\\gaura\\Zotero\\storage\\LA5WDZJU\\978-3-319-08019-2_40.html:text/html}
}

@inproceedings{schmidt_massively_2002,
	address = {Washington, DC, USA},
	series = {{IPDPS} '02},
	title = {Massively {Parallel} {Solutions} for {Molecular} {Sequence} {Analysis}},
	isbn = {978-0-7695-1573-1},
	url = {http://dl.acm.org/citation.cfm?id=645610.662030},
	abstract = {In this paper we present new approaches to high performance protein database scanning on two novel massively parallel architectures to gain supercomputer power at low cost. The first architecture is built around a Beowulf PC-cluster linked by a high-speed network and fine-grained parallel Systola 1024 processor boards connected to each node. The second architecture is the Fuzion 150, a new parallel computer with a linear SIMD array of 1536 processing elements on a single chip. We present the design of a database scanning application based on the Smith-Waterman algorithm in order to derive efficient mappings onto these architectures. The implementations lead to significant runtime savings for large-scale database scanning. This result shows that both architectures provide high-throughput sequence similarity analysis solutions at a good price/performance ratio.},
	urldate = {2018-06-03},
	booktitle = {Proceedings of the 16th {International} {Parallel} and {Distributed} {Processing} {Symposium}},
	publisher = {IEEE Computer Society},
	author = {Schmidt, Bertil and Schröder, Heiko and Schimmler, Manfred},
	year = {2002},
	pages = {201--},
	file = {Schmidt et al. - 2002 - Massively Parallel Solutions for Molecular Sequenc.pdf:C\:\\Users\\gaura\\Zotero\\storage\\XPSGHEZN\\Schmidt et al. - 2002 - Massively Parallel Solutions for Molecular Sequenc.pdf:application/pdf}
}

@inproceedings{knodel_integration_2013,
	title = {Integration of a multi-{FPGA} system in a common cluster environment},
	doi = {10.1109/FPL.2013.6645612},
	abstract = {Heterogeneous systems consisting of general-purpose processors and different types of hardware accelerators are becoming more and more common in HPC systems. Especially Field Programmable Gate Arrays (FPGAs) provide an energy-efficient way to achieve high performance. Numerous application areas, including bio- and neuroinformatics, require enormous processing capabilities and employ simple computation cores. These elementary data structures are highly suitable for FPGAs. To allow an efficient use of distributed FPGAs, we introduce a simple and scalable integration of the FPGAs in a common cluster architecture to permit an easy access to these resources.},
	booktitle = {2013 23rd {International} {Conference} on {Field} programmable {Logic} and {Applications}},
	author = {Knodel, O. and Spallek, R. G.},
	month = sep,
	year = {2013},
	keywords = {Hardware, bioinformatics, common cluster architecture, common cluster environment, Computer architecture, Computers, data structures, elementary data structures, field programmable gate arrays, Field programmable gate arrays, general-purpose processors, hardware accelerators, heterogeneous systems, HPC systems, Logic gates, multiFPGA system, neuroinformatics, pattern clustering, Program processors, Random access memory},
	pages = {1--2},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\gaura\\Zotero\\storage\\LUTE6ADJ\\6645612.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\YL3GGXZD\\Knodel and Spallek - 2013 - Integration of a multi-FPGA system in a common clu.pdf:application/pdf}
}

@inproceedings{uliana_fpga-based_2013,
	title = {{FPGA}-based {HPC} application design for non-experts},
	doi = {10.1109/RSP.2013.6683952},
	abstract = {In the current era of big-data computing, most non-engineer domain experts lack the skills needed to design FPGA-based hardware accelerators to address big-data problems in their fields. This work presents bFlow, a development environment that facilitates the assembly of such accelerators, specifically those targeting FPGA-based hybrid computing platforms, such as the Convey HC series. This framework attempts to address the above problem by making use of an abstracted, graphical front-end more friendly to users without computer engineering backgrounds than traditional, HDL-based design environments, as well as by accelerating bitstream compilation by means of incremental implementation techniques. bFlow's performance, usability, and application to big-data life-science problems were tested by participants of an NSF-funded Summer Institute organized by the Virginia Bioinformatics Institute (VBI). In about one week, a group of four non-engineering participants made significant improvements to a reference Smith-Waterman implementation, adding functionality and scaling theoretical throughput by a factor of 32.},
	booktitle = {2013 {International} {Symposium} on {Rapid} {System} {Prototyping} ({RSP})},
	author = {Uliana, D. and Kepa, K. and Athanas, P.},
	month = oct,
	year = {2013},
	keywords = {Algorithm design and analysis, Hardware, Computer architecture, field programmable gate arrays, Field programmable gate arrays, bFlow performance, big-data life-science problem, FPGA based hardware accelerator, FPGA based hybrid computing platform, graphical front-end, hardware description languages, Hardware design languages, HDL based design environment, HPC application design, incremental implementation technique, logic design, Servers, Smith-Waterman implementation, Software},
	pages = {9--15},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\gaura\\Zotero\\storage\\TLQFPY3C\\6683952.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\DYP9446C\\Uliana et al. - 2013 - FPGA-based HPC application design for non-experts.pdf:application/pdf}
}

@article{wang_heterogeneous_2015,
	title = {Heterogeneous {Cloud} {Framework} for {Big} {Data} {Genome} {Sequencing}},
	volume = {12},
	issn = {1545-5963},
	doi = {10.1109/TCBB.2014.2351800},
	abstract = {The next generation genome sequencing problem with short (long) reads is an emerging field in numerous scientific and big data research domains. However, data sizes and ease of access for scientific researchers are growing and most current methodologies rely on one acceleration approach and so cannot meet the requirements imposed by explosive data scales and complexities. In this paper, we propose a novel FPGA-based acceleration solution with MapReduce framework on multiple hardware accelerators. The combination of hardware acceleration and MapReduce execution flow could greatly accelerate the task of aligning short length reads to a known reference genome. To evaluate the performance and other metrics, we conducted a theoretical speedup analysis on a MapReduce programming platform, which demonstrates that our proposed architecture have efficient potential to improve the speedup for large scale genome sequencing applications. Also, as a practical study, we have built a hardware prototype on the real Xilinx FPGA chip. Significant metrics on speedup, sensitivity, mapping quality, error rate, and hardware cost are evaluated, respectively. Experimental results demonstrate that the proposed platform could efficiently accelerate the next generation sequencing problem with satisfactory accuracy and acceptable hardware cost.},
	number = {1},
	journal = {IEEE/ACM Transactions on Computational Biology and Bioinformatics},
	author = {Wang, C. and Li, X. and Chen, P. and Wang, A. and Zhou, X. and Yu, H.},
	month = jan,
	year = {2015},
	keywords = {Hardware, bioinformatics, Bioinformatics, cloud computing, Acceleration, FPGA, Big Data, Computer architecture, field programmable gate arrays, Field programmable gate arrays, Algorithms, aligning short length reads, Big Data genome sequencing, Chromosome Mapping, Cloud Computing, data sizes, Databases, Genetic, error rate, explosive data scales, FPGA-based acceleration solution, genome sequencing, Genome, Human, genomics, Genomics, hardware cost, heterogeneous cloud framework, Humans, known reference genome, large-scale genome sequencing applications, mapping, mapping quality, MapReduce execution flow, MapReduce framework, MapReduce programming platform, multiple hardware accelerators, next generation genome sequencing problem, next generation sequencing problem, real Xilinx FPGA chip, reconfigurable hardware, Sequence Alignment, Sequence Analysis, DNA, Sequential analysis, Short reads, theoretical speedup analysis},
	pages = {166--178},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\gaura\\Zotero\\storage\\ZR34RDBX\\6897956.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\GSACW7V7\\Wang et al. - 2015 - Heterogeneous Cloud Framework for Big Data Genome .pdf:application/pdf}
}

@inproceedings{rucci_smith-waterman_2014,
	title = {Smith-{Waterman} algorithm on heterogeneous systems: {A} case study},
	shorttitle = {Smith-{Waterman} algorithm on heterogeneous systems},
	doi = {10.1109/CLUSTER.2014.6968784},
	abstract = {The well-known Smith-Waterman (SW) algorithm is a high-sensitivity method for local alignments. However, SW is expensive in terms of both execution time and memory usage, which makes it impractical in many applications. Some heuristics are possible but at the expense of losing sensitivity. Fortunately, previous research have shown that new computing platforms such as GPUs and FPGAs are able to accelerate SW and achieve impressive speedups. In this paper we have explored SW acceleration on a heterogeneous platform equipped with an Intel Xeon Phi coprocessor. Our evaluation, using the well-known Swiss-Prot database as a benchmark, has shown that a hybrid CPU-Phi heterogeneous system is able to achieve competitive performance (62.6 GCUPS), even with moderate low-level optimisations.},
	booktitle = {2014 {IEEE} {International} {Conference} on {Cluster} {Computing} ({CLUSTER})},
	author = {Rucci, E. and Giusti, A. De and Naiouf, M. and Botella, G. and García, C. and Prieto-Matias, M.},
	month = sep,
	year = {2014},
	keywords = {bioinformatics, Bioinformatics, Instruction sets, FPGA, GPU, field programmable gate arrays, coprocessors, Coprocessors, CPU-Phi heterogeneous system, Databases, field programmable gate array, graphics processing unit, graphics processing units, heterogeneous computing, Heuristic algorithms, HPC, Intel Xeon Phi, Intel Xeon Phi coprocessor, local alignment, Optimization, Smith-Waterman, Smith-Waterman algorithm, SW algorithm, Swiss-Prot database, Vectors},
	pages = {323--330},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\gaura\\Zotero\\storage\\X3WK76EE\\6968784.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\QWZAX2UQ\\Rucci et al. - 2014 - Smith-Waterman algorithm on heterogeneous systems.pdf:application/pdf}
}

@article{chiu_molecular_2010,
	title = {Molecular {Dynamics} {Simulations} on {High}-{Performance} {Reconfigurable} {Computing} {Systems}},
	volume = {3},
	issn = {1936-7406},
	url = {http://doi.acm.org/10.1145/1862648.1862653},
	doi = {10.1145/1862648.1862653},
	abstract = {The acceleration of molecular dynamics (MD) simulations using high-performance reconfigurable computing (HPRC) has been much studied. Given the intense competition from multicore and GPUs, there is now a question whether MD on HPRC can be competitive. We concentrate here on the MD kernel computation: determining the short-range force between particle pairs. In one part of the study, we systematically explore the design space of the force pipeline with respect to arithmetic algorithm, arithmetic mode, precision, and various other optimizations. We examine simplifications and find that some have little effect on simulation quality. In the other part, we present the first FPGA study of the filtering of particle pairs with nearly zero mutual force, a standard optimization in MD codes. There are several innovations, including a novel partitioning of the particle space, and new methods for filtering and mapping work onto the pipelines. As a consequence, highly efficient filtering can be implemented with only a small fraction of the FPGA’s resources. Overall, we find that, for an Altera Stratix-III EP3ES260, 8 force pipelines running at nearly 200 MHz can fit on the FPGA, and that they can perform at 95\% efficiency. This results in an 80-fold per core speed-up for the short-range force, which is likely to make FPGAs highly competitive for MD.},
	number = {4},
	urldate = {2018-06-03},
	journal = {ACM Trans. Reconfigurable Technol. Syst.},
	author = {Chiu, Matt and Herbordt, Martin C.},
	month = nov,
	year = {2010},
	keywords = {bioinformatics, application acceleration, biological sequence alignment, FPGA-based coprocessors, high performance reconfigurable computing},
	pages = {23:1--23:37},
	file = {ACM Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\GPZZDJY6\\Chiu and Herbordt - 2010 - Molecular Dynamics Simulations on High-Performance.pdf:application/pdf}
}

@inproceedings{darriba_hpc_2011,
	address = {New York, NY, USA},
	series = {{CMSB} '11},
	title = {{HPC} {Selection} of {Models} of {DNA} {Substitution}},
	isbn = {978-1-4503-0817-5},
	url = {http://doi.acm.org/10.1145/2037509.2037520},
	doi = {10.1145/2037509.2037520},
	abstract = {Statistical model selection has become an essential step for the estimation of phylogenies from DNA sequence alignments. The program jModelTest offers different strategies to identify best-fit models for the data at hand, but for large DNA alignments, this task can demand vast computational resources. This paper presents a High Performance Computing (HPC) adaptation of jModelTest for shared memory multi-core systems and distributed memory cluster platforms. The performance evaluation of this HPC version on a shared memory system and on a cluster shows significant performance advantages, with speedups up to 39. This could represent a reduction in the execution time of some analyses from almost one day to half an hour.},
	urldate = {2018-06-03},
	booktitle = {Proceedings of the 9th {International} {Conference} on {Computational} {Methods} in {Systems} {Biology}},
	publisher = {ACM},
	author = {Darriba, Diego and Taboada, Guillermo L. and Doallo, Ramón and Posada, David},
	year = {2011},
	keywords = {high performance computing, Java threads, message passing in Java, nucleotide substitution, performance evaluation, phylogeny},
	pages = {65--72},
	file = {ACM Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\CEQEKXQL\\Darriba et al. - 2011 - HPC Selection of Models of DNA Substitution.pdf:application/pdf}
}

@inproceedings{mahram_fast_2010,
	address = {New York, NY, USA},
	series = {{ICS} '10},
	title = {Fast and {Accurate} {NCBI} {BLASTP}: {Acceleration} with {Multiphase} {FPGA}-based {Prefiltering}},
	isbn = {978-1-4503-0018-6},
	shorttitle = {Fast and {Accurate} {NCBI} {BLASTP}},
	url = {http://doi.acm.org/10.1145/1810085.1810099},
	doi = {10.1145/1810085.1810099},
	abstract = {NCBI BLAST has become the de facto standard in bioinformatic approximate string matching and so its acceleration is of fundamental importance. The problem is that it uses complex heuristics which make it difficult to simultaneously achieve both substantial speed-up and exact agreement with the original output. We have previously described how a novel FPGA-based prefilter that performs exhaustive ungapped alignment (EUA) could be used to reduce the computation by over 99.9\% without loss of sensitivity. The primary contribution here is to show how the EUA filter can be combined with another filter, this one based on standard 2-hit seeding. The result is a doubling of performance over the previous best implementation, which itself is an order of magnitude faster than the unaccelerated original. Other contributions include new algorithms for both the original EUA and the 2-hit filters and experimental results demonstrating their utility. This new multiphase FPGA-accelerated NCBI BLASTP scales easily and is appropriate for use in large FPGA-based servers such as the Novo-G.},
	urldate = {2018-06-03},
	booktitle = {Proceedings of the 24th {ACM} {International} {Conference} on {Supercomputing}},
	publisher = {ACM},
	author = {Mahram, Atabak and Herbordt, Martin C.},
	year = {2010},
	keywords = {bioinformatics, biological sequence alignment, FPGA-based coprocessors, high performance reconfigurable computing},
	pages = {73--82},
	file = {ACM Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\UDDGJC3Z\\Mahram and Herbordt - 2010 - Fast and Accurate NCBI BLASTP Acceleration with M.pdf:application/pdf}
}

@article{meng_high-performance_2010,
	title = {A {High}-{Performance} {Heterogeneous} {Computing} {Platform} for {Biological} {Sequence} {Analysis}},
	volume = {21},
	issn = {1045-9219},
	doi = {10.1109/TPDS.2009.165},
	abstract = {Advances in bioinformatics research continue to add complexity to the analyses and interpretation of biological data. Certain sequence database searches may take weeks to complete due to complicated data dependencies by dynamic programming. A reconfigurable coprocessor can remove this computational bottleneck and accelerate the operation. This paper presents a heterogeneous computing platform through Message Passing Interface (MPI) enabled enterprise computing infrastructure for high-throughput biological sequence analysis. The computing platform integrates heterogeneous computer architectures including conventional processors with Streaming Single Instruction Multiple Data Extensions 2 (SSE2) instructions, reconfigurable coprocessors, and legacy processors together into one system, and allows each to perform the task to which it is best suited. With appropriate computation and communication scheduling, the integrated heterogeneous computing infrastructure is designed to accommodate various types of accelerators to provide a High-Performance Computing (HPC) framework to support the most widely used life science applications.},
	number = {9},
	journal = {IEEE Transactions on Parallel and Distributed Systems},
	author = {Meng, X. and Chaudhary, V.},
	month = sep,
	year = {2010},
	keywords = {bioinformatics, message passing, FPGA, coprocessors, Smith-Waterman algorithm, biological sequence analysis, distributed databases, dynamic programming, heterogeneous computer architectures, heterogeneous computing platform, high-performance computing, HPC., Index Term—Heterogeneous computing platform, legacy processors, message passing interface, MPI, reconfigurable architectures, reconfigurable coprocessor, sequence alignment, SIMD, software maintenance, SSE2, streaming single instruction multiple data extensions 2},
	pages = {1267--1280},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\gaura\\Zotero\\storage\\6S5CBFL3\\5374384.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\P3NI3H2L\\Meng and Chaudhary - 2010 - A High-Performance Heterogeneous Computing Platfor.pdf:application/pdf}
}

@inproceedings{harb_fpga_2012,
	address = {Las Vegas, USA},
	title = {{FPGA} {Based} {Accelerator} for {Bioinformatics} {Haplotype} {Inference} {Application}},
	abstract = {1 Hardware accelerators have been used to accelerate various bioinformatics applications without altering their accuracy. These accelerators are used to speed up sophisticated algorithms where powerful computational techniques are used to analyse, simulate and estimate biological data. These are hardware accelerators mostly made up of Field Programmable Gate Array (FPGA) or multiple FPGA hybrid systems. One bioinformatics application in need for acceleration is the haplotype inference application. This application is essential in producing maps used to identify complex diseases. It is also used in ﬁnding phylogenetic trees that provide relationships among populations. The main objective of this paper is to build an FPGA-hybrid system connected to a host PC that will accelerate PHASE (one important haplotype inference application) and enhance its processing time while maintaining the same accuracy and functionality.},
	language = {en},
	booktitle = {13th {International} {Conference} on {Bioinformatics} and {Computational} {Biology} ({BIOCOMP}'12)},
	author = {Harb, N and Saghir, M A R and Dawy, Z and Valderrama, C},
	month = jul,
	year = {2012},
	pages = {7},
	file = {Harb et al. - FPGA Based Accelerator for Bioinformatics Haplotyp.pdf:C\:\\Users\\gaura\\Zotero\\storage\\VDY8LAJ3\\Harb et al. - FPGA Based Accelerator for Bioinformatics Haplotyp.pdf:application/pdf}
}

@inproceedings{perez-sanchez_role_2014,
	title = {The role of {High} {Performance} {Computing} in {Bioinformatics}},
	abstract = {We are witnessing one of the major revolutions in parallel systems. The consolidation of heterogeneous systems at diﬀerent levels -from desktop computers to large-scale systems such as supercomputers, clusters or grids, through all kinds of low-power devices- is providing a computational power unimaginable just few years ago, trying to follow the wake of Moore’s law. This landscape in the high performance computing arena opens up great opportunities in the simulation of relevant biological systems and for applications in Bioinformatics, Computational Biology and Computational Chemistry. This introductory article shows the last tendencies of this active research ﬁeld and our perspectives for the forthcoming years.},
	language = {en},
	booktitle = {Proceedings {IWBBIO} 2014},
	author = {Perez-Sanchez, Horacio and Cecilia, Jose M and Merelli, Ivan},
	year = {2014},
	pages = {494--506},
	file = {Perez-Sanchez et al. - 2014 - The role of High Performance Computing in Bioinfor.pdf:C\:\\Users\\gaura\\Zotero\\storage\\29KNPNV7\\Perez-Sanchez et al. - 2014 - The role of High Performance Computing in Bioinfor.pdf:application/pdf}
}

@inproceedings{ferro_leveraging_2016,
	title = {Leveraging {High} {Performance} {Computing} for {Bioinformatics}: {A} {Methodology} that {Enables} a {Reliable} {Decision}-{Making}},
	shorttitle = {Leveraging {High} {Performance} {Computing} for {Bioinformatics}},
	doi = {10.1109/CCGrid.2016.69},
	abstract = {Bioinformatics could greatly benefit from increased computational resources delivered by High Performance Computing. However, the decision-making about which is the best architecture to deliver good performance for a set of Bioinformatics applications is a hard task. The traditional way is finding the architecture with a high theoretical peak of performance, obtained with benchmark tests. But, this is not an assured way for this decision, because each application of Bioinformatics has different computational requirements, which frequently are much different from usual benchmarks. We developed a methodology that assists researchers, even when their specialty is not high performance computing, to define the best computational infrastructure focused on their set of scientific application requirements. For this purpose, the methodology enables to define representative evaluation tests, including a model to define the correct benchmark, when the tests endorsed by the methodology could not be fully used. Further, a Gain Function allows a reliable decision-making based on the performances of a set of applications and architectures. It is also possible to consider the relative importance between applications and also between cost and performance.},
	booktitle = {2016 16th {IEEE}/{ACM} {International} {Symposium} on {Cluster}, {Cloud} and {Grid} {Computing} ({CCGrid})},
	author = {Ferro, M. and Nicolas, M. F. and Saji, Q. D. R. Q. and Mury, A. R. and Schulze, B.},
	month = may,
	year = {2016},
	keywords = {Reliability, bioinformatics, Bioinformatics, Computer architecture, high performance computing, performance evaluation, Benchmark testing, bioinformatics applications, computational resources, decision making, Decision making, gain function, High performance computing, parallel processing, Performance evaluation, reliable decision making, scientific applications},
	pages = {684--692},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\gaura\\Zotero\\storage\\XYQLIQP5\\7515756.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\XM8B3GQJ\\Ferro et al. - 2016 - Leveraging High Performance Computing for Bioinfor.pdf:application/pdf}
}

@inproceedings{oliver_hyper_2005,
	address = {New York, NY, USA},
	series = {{FPGA} '05},
	title = {Hyper {Customized} {Processors} for {Bio}-sequence {Database} {Scanning} on {FPGAs}},
	isbn = {978-1-59593-029-3},
	url = {http://doi.acm.org/10.1145/1046192.1046222},
	doi = {10.1145/1046192.1046222},
	abstract = {Protein sequences with unknown functionality are often compared to a set of known sequences to detect functional similarities. Efficient dynamic-programming algorithms exist for solving this problem, however current solutions still require significant scan times. These scan time requirements are likely to become even more severe due to exponential database growth. In this paper we present a new approach to bio-sequence database scanning using re-configurable FPGA-based hardware platforms to gain high performance at low cost. Efficient mappings of the Smith-Waterman algorithm using fine-grained parallel processing elements (PEs) that are tailored towards the parameters of a query have been designed. We use customization opportunities available at run-time to dynamically hyper customize the systolic array to make better use of available resource. Our FPGA implementation achieves a speedup of approximately 170 for linear gap penalties and 125 for affine gap penalties as compared to a standard desktop computing platform. We show how hyper-customization at run-time can be used to further improve the performance.},
	urldate = {2018-06-24},
	booktitle = {Proceedings of the 2005 {ACM}/{SIGDA} 13th {International} {Symposium} on {Field}-programmable {Gate} {Arrays}},
	publisher = {ACM},
	author = {Oliver, Tim and Schmidt, Bertil and Maskell, Douglas},
	year = {2005},
	keywords = {FPGA, Smith-Waterman, bio-informatics, dynamic re-configuration},
	pages = {229--237},
	file = {ACM Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\RKH6UDKF\\Oliver et al. - 2005 - Hyper Customized Processors for Bio-sequence Datab.pdf:application/pdf}
}

@inproceedings{yu_smith-waterman_2003,
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {A {Smith}-{Waterman} {Systolic} {Cell}},
	isbn = {978-3-540-40822-2 978-3-540-45234-8},
	url = {https://link.springer.com/chapter/10.1007/978-3-540-45234-8_37},
	doi = {10.1007/978-3-540-45234-8_37},
	abstract = {With an aim to understand the information encoded by DNA sequences, databases containing large amount of DNA sequence information are frequently compared and searched for matching or near-matching patterns. This kind of similarity calculation is known as sequence alignment. To date, the most popular algorithms for this operation are heuristic approaches such as BLAST and FASTA which give high speed but low sensitivity, i.e. significant matches may be missed by the searches. Another algorithm, the Smith-Waterman algorithm, is a more computationally expensive algorithm but achieves higher sensitivity. In this paper, an improved systolic processing element cell for implementing the Smith-Waterman on a Xilinx Virtex FPGA is presented.},
	language = {en},
	urldate = {2018-06-24},
	booktitle = {Field {Programmable} {Logic} and {Application}},
	publisher = {Springer, Berlin, Heidelberg},
	author = {Yu, C. W. and Kwong, K. H. and Lee, K. H. and Leong, P. H. W.},
	month = sep,
	year = {2003},
	pages = {375--384},
	file = {Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\NKGK7FZ7\\Yu et al. - 2003 - A Smith-Waterman Systolic Cell.pdf:application/pdf;Snapshot:C\:\\Users\\gaura\\Zotero\\storage\\45D8DN6I\\978-3-540-45234-8_37.html:text/html}
}

@article{luethy_hardware_2004,
	title = {Hardware and software systems for accelerating common bioinformatics sequence analysis algorithms},
	volume = {2},
	issn = {1741-8364},
	url = {http://www.sciencedirect.com/science/article/pii/S1741836404023832},
	doi = {10.1016/S1741-8364(04)02383-2},
	abstract = {Genomics research requires analysis of large sequence databases and is heavily dependent upon bioinformatics computation. Several complementary computing strategies are available to perform the analysis in reasonable time. The most common hardware solutions are CPU clusters and dedicated bioinformatics hardware accelerators. Here, we present an overview on how these systems can be used in practice to accelerate common bioinformatics sequence analysis algorithms and techniques.},
	number = {1},
	urldate = {2018-06-26},
	journal = {Drug Discovery Today: BIOSILICO},
	author = {Luethy, Roland and Hoover, Christopher},
	month = jan,
	year = {2004},
	keywords = {bioinformatics, FPGA, CPU cluster, grid computing, hardware accelerator, sequence database search},
	pages = {12--17},
	file = {ScienceDirect Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\36FNN42B\\Luethy and Hoover - 2004 - Hardware and software systems for accelerating com.pdf:application/pdf;ScienceDirect Snapshot:C\:\\Users\\gaura\\Zotero\\storage\\3AJZL2VU\\S1741836404023832.html:text/html}
}

@article{venter_sequence_2001,
	title = {The {Sequence} of the {Human} {Genome}},
	volume = {291},
	issn = {0036-8075, 1095-9203},
	url = {http://science.sciencemag.org/content/291/5507/1304},
	doi = {10.1126/science.1058040},
	abstract = {A 2.91-billion base pair (bp) consensus sequence of the euchromatic portion of the human genome was generated by the whole-genome shotgun sequencing method. The 14.8-billion bp DNA sequence was generated over 9 months from 27,271,853 high-quality sequence reads (5.11-fold coverage of the genome) from both ends of plasmid clones made from the DNA of five individuals. Two assembly strategies—a whole-genome assembly and a regional chromosome assembly—were used, each combining sequence data from Celera and the publicly funded genome effort. The public data were shredded into 550-bp segments to create a 2.9-fold coverage of those genome regions that had been sequenced, without including biases inherent in the cloning and assembly procedure used by the publicly funded group. This brought the effective coverage in the assemblies to eightfold, reducing the number and size of gaps in the final assembly over what would be obtained with 5.11-fold coverage. The two assembly strategies yielded very similar results that largely agree with independent mapping data. The assemblies effectively cover the euchromatic regions of the human chromosomes. More than 90\% of the genome is in scaffold assemblies of 100,000 bp or more, and 25\% of the genome is in scaffolds of 10 million bp or larger. Analysis of the genome sequence revealed 26,588 protein-encoding transcripts for which there was strong corroborating evidence and an additional ∼12,000 computationally derived genes with mouse matches or other weak supporting evidence. Although gene-dense clusters are obvious, almost half the genes are dispersed in low G+C sequence separated by large tracts of apparently noncoding sequence. Only 1.1\% of the genome is spanned by exons, whereas 24\% is in introns, with 75\% of the genome being intergenic DNA. Duplications of segmental blocks, ranging in size up to chromosomal lengths, are abundant throughout the genome and reveal a complex evolutionary history. Comparative genomic analysis indicates vertebrate expansions of genes associated with neuronal function, with tissue-specific developmental regulation, and with the hemostasis and immune systems. DNA sequence comparisons between the consensus sequence and publicly funded genome data provided locations of 2.1 million single-nucleotide polymorphisms (SNPs). A random pair of human haploid genomes differed at a rate of 1 bp per 1250 on average, but there was marked heterogeneity in the level of polymorphism across the genome. Less than 1\% of all SNPs resulted in variation in proteins, but the task of determining which SNPs have functional consequences remains an open challenge.},
	language = {en},
	number = {5507},
	urldate = {2018-06-29},
	journal = {Science},
	author = {Venter, J. Craig and Adams, Mark D. and Myers, Eugene W. and Li, Peter W. and Mural, Richard J. and Sutton, Granger G. and Smith, Hamilton O. and Yandell, Mark and Evans, Cheryl A. and Holt, Robert A. and Gocayne, Jeannine D. and Amanatides, Peter and Ballew, Richard M. and Huson, Daniel H. and Wortman, Jennifer Russo and Zhang, Qing and Kodira, Chinnappa D. and Zheng, Xiangqun H. and Chen, Lin and Skupski, Marian and Subramanian, Gangadharan and Thomas, Paul D. and Zhang, Jinghui and Miklos, George L. Gabor and Nelson, Catherine and Broder, Samuel and Clark, Andrew G. and Nadeau, Joe and McKusick, Victor A. and Zinder, Norton and Levine, Arnold J. and Roberts, Richard J. and Simon, Mel and Slayman, Carolyn and Hunkapiller, Michael and Bolanos, Randall and Delcher, Arthur and Dew, Ian and Fasulo, Daniel and Flanigan, Michael and Florea, Liliana and Halpern, Aaron and Hannenhalli, Sridhar and Kravitz, Saul and Levy, Samuel and Mobarry, Clark and Reinert, Knut and Remington, Karin and Abu-Threideh, Jane and Beasley, Ellen and Biddick, Kendra and Bonazzi, Vivien and Brandon, Rhonda and Cargill, Michele and Chandramouliswaran, Ishwar and Charlab, Rosane and Chaturvedi, Kabir and Deng, Zuoming and Francesco, Valentina Di and Dunn, Patrick and Eilbeck, Karen and Evangelista, Carlos and Gabrielian, Andrei E. and Gan, Weiniu and Ge, Wangmao and Gong, Fangcheng and Gu, Zhiping and Guan, Ping and Heiman, Thomas J. and Higgins, Maureen E. and Ji, Rui-Ru and Ke, Zhaoxi and Ketchum, Karen A. and Lai, Zhongwu and Lei, Yiding and Li, Zhenya and Li, Jiayin and Liang, Yong and Lin, Xiaoying and Lu, Fu and Merkulov, Gennady V. and Milshina, Natalia and Moore, Helen M. and Naik, Ashwinikumar K. and Narayan, Vaibhav A. and Neelam, Beena and Nusskern, Deborah and Rusch, Douglas B. and Salzberg, Steven and Shao, Wei and Shue, Bixiong and Sun, Jingtao and Wang, Zhen Yuan and Wang, Aihui and Wang, Xin and Wang, Jian and Wei, Ming-Hui and Wides, Ron and Xiao, Chunlin and Yan, Chunhua and Yao, Alison and Ye, Jane and Zhan, Ming and Zhang, Weiqing and Zhang, Hongyu and Zhao, Qi and Zheng, Liansheng and Zhong, Fei and Zhong, Wenyan and Zhu, Shiaoping C. and Zhao, Shaying and Gilbert, Dennis and Baumhueter, Suzanna and Spier, Gene and Carter, Christine and Cravchik, Anibal and Woodage, Trevor and Ali, Feroze and An, Huijin and Awe, Aderonke and Baldwin, Danita and Baden, Holly and Barnstead, Mary and Barrow, Ian and Beeson, Karen and Busam, Dana and Carver, Amy and Center, Angela and Cheng, Ming Lai and Curry, Liz and Danaher, Steve and Davenport, Lionel and Desilets, Raymond and Dietz, Susanne and Dodson, Kristina and Doup, Lisa and Ferriera, Steven and Garg, Neha and Gluecksmann, Andres and Hart, Brit and Haynes, Jason and Haynes, Charles and Heiner, Cheryl and Hladun, Suzanne and Hostin, Damon and Houck, Jarrett and Howland, Timothy and Ibegwam, Chinyere and Johnson, Jeffery and Kalush, Francis and Kline, Lesley and Koduru, Shashi and Love, Amy and Mann, Felecia and May, David and McCawley, Steven and McIntosh, Tina and McMullen, Ivy and Moy, Mee and Moy, Linda and Murphy, Brian and Nelson, Keith and Pfannkoch, Cynthia and Pratts, Eric and Puri, Vinita and Qureshi, Hina and Reardon, Matthew and Rodriguez, Robert and Rogers, Yu-Hui and Romblad, Deanna and Ruhfel, Bob and Scott, Richard and Sitter, Cynthia and Smallwood, Michelle and Stewart, Erin and Strong, Renee and Suh, Ellen and Thomas, Reginald and Tint, Ni Ni and Tse, Sukyee and Vech, Claire and Wang, Gary and Wetter, Jeremy and Williams, Sherita and Williams, Monica and Windsor, Sandra and Winn-Deen, Emily and Wolfe, Keriellen and Zaveri, Jayshree and Zaveri, Karena and Abril, Josep F. and Guigó, Roderic and Campbell, Michael J. and Sjolander, Kimmen V. and Karlak, Brian and Kejariwal, Anish and Mi, Huaiyu and Lazareva, Betty and Hatton, Thomas and Narechania, Apurva and Diemer, Karen and Muruganujan, Anushya and Guo, Nan and Sato, Shinji and Bafna, Vineet and Istrail, Sorin and Lippert, Ross and Schwartz, Russell and Walenz, Brian and Yooseph, Shibu and Allen, David and Basu, Anand and Baxendale, James and Blick, Louis and Caminha, Marcelo and Carnes-Stine, John and Caulk, Parris and Chiang, Yen-Hui and Coyne, My and Dahlke, Carl and Mays, Anne Deslattes and Dombroski, Maria and Donnelly, Michael and Ely, Dale and Esparham, Shiva and Fosler, Carl and Gire, Harold and Glanowski, Stephen and Glasser, Kenneth and Glodek, Anna and Gorokhov, Mark and Graham, Ken and Gropman, Barry and Harris, Michael and Heil, Jeremy and Henderson, Scott and Hoover, Jeffrey and Jennings, Donald and Jordan, Catherine and Jordan, James and Kasha, John and Kagan, Leonid and Kraft, Cheryl and Levitsky, Alexander and Lewis, Mark and Liu, Xiangjun and Lopez, John and Ma, Daniel and Majoros, William and McDaniel, Joe and Murphy, Sean and Newman, Matthew and Nguyen, Trung and Nguyen, Ngoc and Nodell, Marc and Pan, Sue and Peck, Jim and Peterson, Marshall and Rowe, William and Sanders, Robert and Scott, John and Simpson, Michael and Smith, Thomas and Sprague, Arlan and Stockwell, Timothy and Turner, Russell and Venter, Eli and Wang, Mei and Wen, Meiyuan and Wu, David and Wu, Mitchell and Xia, Ashley and Zandieh, Ali and Zhu, Xiaohong},
	month = feb,
	year = {2001},
	pmid = {11181995},
	pages = {1304--1351},
	file = {Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\552RHU5F\\Venter et al. - 2001 - The Sequence of the Human Genome.pdf:application/pdf;Snapshot:C\:\\Users\\gaura\\Zotero\\storage\\5JPB2CYE\\1304.html:text/html}
}

@inproceedings{darling_design_2003,
	title = {The {Design}, {Implementation}, and {Evaluation} of {mpiBLAST}},
	abstract = {mpiBLAST is an open-source parallelization of BLAST that  achieves superlinear speed-up by segmenting a BLAST database and  then having each node in a computational cluster search a unique portion  of the database. Database segmentation permits each node to search  a smaller portion of the database, eliminating disk I/O and vastly improving  BLAST performance. Because database segmentation does not  create heavy communication demands, BLAST users can take advantage  of low-cost and e\#cient Linux cluster architectures such as the bladed  Beowulf [8, 16]. In addition to presenting the software architecture of  mpiBLAST, we present a detailed performance analysis of mpiBLAST  to demonstrate its scalability.},
	booktitle = {In {Proceedings} of {ClusterWorld} 2003},
	author = {Darling, Aaron E. and Carey, Lucas and Feng, Wu-chun},
	year = {2003},
	file = {Citeseer - Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\CGS5KY2H\\Darling et al. - 2003 - The Design, Implementation, and Evaluation of mpiB.pdf:application/pdf;Citeseer - Snapshot:C\:\\Users\\gaura\\Zotero\\storage\\LKBNPWTZ\\summary.html:text/html}
}

@inproceedings{boukerche_parallel_2005,
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Parallel {Smith}-{Waterman} {Algorithm} for {Local} {DNA} {Comparison} in a {Cluster} of {Workstations}},
	isbn = {978-3-540-25920-6 978-3-540-32078-4},
	url = {https://link.springer.com/chapter/10.1007/11427186_40},
	doi = {10.1007/11427186_40},
	abstract = {Biological sequence comparison is one of the most important and basic problems in computational biology. Due to its high demands for computational power and memory, it is a very challenging task. Most of sequence comparison methods used are based on heuristics, which are faster but there are no guarantees that the best alignments will be produced. On the other hand, the algorithm proposed by Smith-Waterman obtains the best local alignments at the expense of very high computing power and huge memory requirements. In this article, we present and evaluate our experiments with three parallel strategies to run the Smith-Waterman algorithm in a cluster of workstations using a Distributed Shared Memory System. Our results on an eight-machine cluster presented very good speedups and indicate that impressive improvements can be achieved, depending on the strategy used. Also, we present some theoretical remarks on how to reduce the amount of memory used.},
	language = {en},
	urldate = {2018-06-30},
	booktitle = {Experimental and {Efficient} {Algorithms}},
	publisher = {Springer, Berlin, Heidelberg},
	author = {Boukerche, Azzedine and Melo, Alba Cristina Magalhaes Alves de and Ayala-Rincon, Mauricio and Santana, Thomas M.},
	month = may,
	year = {2005},
	pages = {464--475},
	file = {Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\R3XXSL6G\\Boukerche et al. - 2005 - Parallel Smith-Waterman Algorithm for Local DNA Co.pdf:application/pdf;Snapshot:C\:\\Users\\gaura\\Zotero\\storage\\4TBYGSGM\\11427186_40.html:text/html}
}

@inproceedings{boukerche_performance_2004,
	title = {A performance evaluation of a local {DNA} sequence alignment algorithm on a cluster of workstations},
	doi = {10.1109/IPDPS.2004.1303158},
	abstract = {Summary form only given. Biological inspired techniques have proven to be efficient in solving a variety of real problems using parallel and distributed processing. In this paper, we wish to study the DNA sequencing problem known for its computational requirements which far exceed the computing capabilities of the fastest available sequential machines. Sequence comparison is a basic operation of the DNA sequencing problem, mainly due to the large number of DNA sequences. While most of the methods used are based on heuristic paradigms and have relatively a fast execution time, they do not produce optimal alignments sought by most biologists. Recently, many organisms had their DNA entirely sequenced, and this reality presents the need for comparing long DNA sequences, which is a challenging task due to its high demands for computational requirements (power and memory). In this paper, we present an efficient parallel strategy for implementing a sequence alignment algorithm for long sequences, and evaluate its performance using a cluster of workstations. This strategy was implemented in JIAJIA, a scope consistent software DSM system. Our results indicate clearly that our scheme is feasible, achieve a good speedup and can help in obtaining a better solution to the DNA sequencing problem when compared to previous schemes.},
	booktitle = {18th {International} {Parallel} and {Distributed} {Processing} {Symposium}, 2004. {Proceedings}.},
	author = {Boukerche, A. and Melo, A. C. M. A. de and Walter, M. E. T. and Melo, R. C. F. and Santana, M. N. P. and Batista, R. B.},
	month = apr,
	year = {2004},
	keywords = {biocomputing, biological inspired techniques, Biology computing, Clustering algorithms, Computer science, distributed processing, Distributed processing, DNA computing, DNA sequence alignment algorithm, JIAJIA scope consistent software DSM system, Organisms, parallel processing, performance evaluation, Sequences, sequential machines, Software algorithms, Software systems, workstation cluster, workstation clusters, Workstations},
	pages = {164--},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\gaura\\Zotero\\storage\\VBQZTVNR\\1303158.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\9E9GDWIC\\Boukerche et al. - 2004 - A performance evaluation of a local DNA sequence a.pdf:application/pdf}
}

@inproceedings{martins_multithreaded_2000,
	title = {A {multithreaded} {parallel} {implementation} {of} {a} {dynamic} {programming} {algorithm} {for} {sequence} {comparison}},
	isbn = {978-981-02-4515-3 978-981-4447-36-2},
	url = {http://www.worldscientific.com/doi/abs/10.1142/9789814447362_0031},
	doi = {10.1142/9789814447362_0031},
	abstract = {This paper discusses the issues involved in implementing a dynamic programming algorithm for biological sequence comparison on a generalpurpose parallel computing platform based on a ne-grain event-driven multithreaded program execution model. Fine-grain multithreading permits e cient parallelism exploitation in this application both by taking advantage of asynchronous point-to-point synchronizations and communication with low overheads and by e ectively tolerating latency through the overlapping of computation and communication. We have implemented our scheme on EARTH, a ne-grain event-driven multithreaded execution and architecture model which has been ported to a number of parallel machines with o -the-shelf processors. Our experimental results show that the dynamic programming algorithm can be e ciently implemented on EARTH systems with high performance  e.g., speedup of 90 on 120 nodes , good programmability and reasonable cost.},
	language = {en},
	urldate = {2018-06-30},
	publisher = {WORLD SCIENTIFIC},
	author = {Martins, W. S. and Del Cuvillo, J. B. and Useche, F. J. and Theobald, K. B. and Gao, G. R.},
	month = dec,
	year = {2000},
	pages = {311--322},
	file = {Martins et al. - 2000 - A MULTITHREADED PARALLEL IMPLEMENTATION OF A DYNAM.pdf:C\:\\Users\\gaura\\Zotero\\storage\\43K6BSE4\\Martins et al. - 2000 - A MULTITHREADED PARALLEL IMPLEMENTATION OF A DYNAM.pdf:application/pdf}
}

@article{liu_cuda-blastp:_2011,
	title = {{CUDA}-{BLASTP}: {Accelerating} {BLASTP} on {CUDA}-{Enabled} {Graphics} {Hardware}},
	volume = {8},
	issn = {1545-5963},
	shorttitle = {{CUDA}-{BLASTP}},
	doi = {10.1109/TCBB.2011.33},
	abstract = {Scanning protein sequence database is an often repeated task in computational biology and bioinformatics. However, scanning large protein databases, such as GenBank, with popular tools such as BLASTP requires long runtimes on sequential architectures. Due to the continuing rapid growth of sequence databases, there is a high demand to accelerate this task. In this paper, we demonstrate how GPUs, powered by the Compute Unified Device Architecture (CUDA), can be used as an efficient computational platform to accelerate the BLASTP algorithm. In order to exploit the GPU's capabilities for accelerating BLASTP, we have used a compressed deterministic finite state automaton for hit detection as well as a hybrid parallelization scheme. Our implementation achieves speedups up to 10.0 on an NVIDIA GeForce GTX 295 GPU compared to the sequential NCBI BLASTP 2.2.22. CUDA-BLASTP source code which is available at https://sites.google.com/site/liuweiguohome/software.},
	number = {6},
	journal = {IEEE/ACM Transactions on Computational Biology and Bioinformatics},
	author = {Liu, W. and Schmidt, B. and Muller-Wittig, W.},
	month = nov,
	year = {2011},
	keywords = {Algorithms, biological techniques, biology computing, BLAST, BLASTP algorithm, compressed deterministic finite state automaton, compute unified device architecture, Computer graphics, Computer Graphics, CUDA-BLASTP source code, CUDA-enabled graphics hardware, CUDA., Databases, Protein, Doped fiber amplifiers, dynamic programming, Dynamic programming, GPGPU, graphics hardware, Graphics processing unit, hybrid parallelization scheme, Instruction sets, molecular configurations, NVIDIA GeForce GTX 295 GPU, proteins, Proteins, scanning protein sequence database, sequence alignment, sequential NCBI BLASTP 2.2.22, Software},
	pages = {1678--1684},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\gaura\\Zotero\\storage\\22FZR8C9\\5719601.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\F3V3D7LT\\Liu et al. - 2011 - CUDA-BLASTP Accelerating BLASTP on CUDA-Enabled G.pdf:application/pdf}
}

@article{gollery_bioinformatics:_2005,
	title = {Bioinformatics: {Sequence} and {Genome} {Analysis}, 2nd ed. {David} {W}. {Mount}. {Cold} {Spring} {Harbor}, {NY}: {Cold} {Spring} {Harbor} {Laboratory} {Press}, 2004, 692 pp., \$75.00, paperback. {ISBN} 0-87969-712-1.},
	volume = {51},
	copyright = {© 2005 The American Association for Clinical Chemistry},
	issn = {0009-9147, 1530-8561},
	shorttitle = {Bioinformatics},
	url = {http://clinchem.aaccjnls.org/content/51/11/2219.1},
	doi = {10.1373/clinchem.2005.053850},
	abstract = {The production of a good introduction to the field of bioinformatics has been a very difficult task because of the duality of the target audience. A text that is appropriate for the computer scientist is typically not good for the biologist, and vice versa. Producing a primer that is suitable for both has been a target of numerous authors in the past few years. One of the most successful has been the first edition of David Mount’s book, and so it was that I received this second edition with no little sense of anticipation. Would this be a successful upgrade, or would the changes be merely cosmetic? Furthermore, would the third class of bioinformatics students be well served; namely, those many …},
	language = {en},
	number = {11},
	urldate = {2018-06-30},
	journal = {Clinical Chemistry},
	author = {Gollery, Martin},
	month = nov,
	year = {2005},
	pages = {2219--2219},
	file = {Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\8G3NJ238\\Gollery - 2005 - Bioinformatics Sequence and Genome Analysis, 2nd .pdf:application/pdf;Snapshot:C\:\\Users\\gaura\\Zotero\\storage\\ZUJFXK6R\\2219.1.html:text/html}
}

@article{hughey_hidden_1996,
	title = {Hidden {Markov} models for sequence analysis: extension and analysis of the basic method},
	volume = {12},
	issn = {1367-4803},
	shorttitle = {Hidden {Markov} models for sequence analysis},
	url = {https://academic.oup.com/bioinformatics/article/12/2/95/257274},
	doi = {10.1093/bioinformatics/12.2.95},
	abstract = {Abstract.  Hidden Markov models (HMMs) are a highly effective means of modeling a family of unaligned sequences or a common motif within a set of unaligned sequ},
	language = {en},
	number = {2},
	urldate = {2018-06-30},
	journal = {Bioinformatics},
	author = {Hughey, Richard and Krogh, Anders},
	month = apr,
	year = {1996},
	pages = {95--107},
	file = {Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\WZIE6HX6\\Hughey and Krogh - 1996 - Hidden Markov models for sequence analysis extens.pdf:application/pdf;Snapshot:C\:\\Users\\gaura\\Zotero\\storage\\JFMI5AM3\\257274.html:text/html}
}

@book{mount_bioinformatics:_2004,
	address = {Cold Spring Harbor, N.Y},
	edition = {2nd edition},
	title = {Bioinformatics: {Sequence} and {Genome} {Analysis}},
	isbn = {978-0-87969-712-9},
	shorttitle = {Bioinformatics},
	abstract = {As more species' genomes are sequenced, computational analysis of these data has become increasingly important. The second, entirely updated edition of this widely praised textbook provides a comprehensive and critical examination of the computational methods needed for analyzing DNA, RNA, and protein data, as well as genomes. The book has been rewritten to make it more accessible to a wider audience, including advanced undergraduate and graduate students. New features include chapter guides and explanatory information panels and glossary terms. New chapters in this second edition cover statistical analysis of sequence alignments, computer programming for bioinformatics, and data management and mining. Practically oriented problems at the ends of chapters enhance the value of the book as a teaching resource. The book also serves as an essential reference for professionals in molecular biology, pharmaceutical, and genome laboratories.},
	language = {English},
	publisher = {Cold Spring Harbor Laboratory Press},
	author = {Mount, David},
	month = aug,
	year = {2004},
	file = {Bioinformatics Sequence and Genome Analysis, Seco.pdf:C\:\\Users\\gaura\\Zotero\\storage\\TMMGXAA4\\Bioinformatics Sequence and Genome Analysis, Seco.pdf:application/pdf}
}

@article{needleman_general_1970,
	title = {A general method applicable to the search for similarities in the amino acid sequence of two proteins},
	volume = {48},
	issn = {0022-2836},
	url = {http://www.sciencedirect.com/science/article/pii/0022283670900574},
	doi = {10.1016/0022-2836(70)90057-4},
	abstract = {A computer adaptable method for finding similarities in the amino acid sequences of two proteins has been developed. From these findings it is possible to determine whether significant homology exists between the proteins. This information is used to trace their possible evolutionary development. The maximum match is a number dependent upon the similarity of the sequences. One of its definitions is the largest number of amino acids of one protein that can be matched with those of a second protein allowing for all possible interruptions in either of the sequences. While the interruptions give rise to a very large number of comparisons, the method efficiently excludes from consideration those comparisons that cannot contribute to the maximum match. Comparisons are made from the smallest unit of significance, a pair of amino acids, one from each protein. All possible pairs are represented by a two-dimensional array, and all possible comparisons are represented by pathways through the array. For this maximum match only certain of the possible pathways must be evaluated. A numerical value, one in this case, is assigned to every cell in the array representing like amino acids. The maximum match is the largest number that would result from summing the cell values of every pathway.},
	number = {3},
	urldate = {2018-07-01},
	journal = {Journal of Molecular Biology},
	author = {Needleman, Saul B. and Wunsch, Christian D.},
	month = mar,
	year = {1970},
	pages = {443--453},
	file = {ScienceDirect Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\CSRMQ8ZC\\Needleman and Wunsch - 1970 - A general method applicable to the search for simi.pdf:application/pdf;ScienceDirect Snapshot:C\:\\Users\\gaura\\Zotero\\storage\\X5LIP7DZ\\0022283670900574.html:text/html}
}

@article{lipman_rapid_1985,
	title = {Rapid and sensitive protein similarity searches},
	volume = {227},
	copyright = {© 1985},
	issn = {0036-8075, 1095-9203},
	url = {http://science.sciencemag.org/content/227/4693/1435},
	doi = {10.1126/science.2983426},
	abstract = {An algorithm was developed which facilitates the search for similarities between newly determined amino acid sequences and sequences already available in databases. Because of the algorithm's efficiency on many microcomputers, sensitive protein database searches may now become a routine procedure for molecular biologists. The method efficiently identifies regions of similar sequence and then scores the aligned identical and differing residues in those regions by means of an amino acid replacability matrix. This matrix increases sensitivity by giving high scores to those amino acid replacements which occur frequently in evolution. The algorithm has been implemented in a computer program designed to search protein databases very rapidly. For example, comparison of a 200-amino-acid sequence to the 500,000 residues in the National Biomedical Research Foundation library would take less than 2 minutes on a minicomputer, and less than 10 minutes on a microcomputer (IBM PC).},
	language = {en},
	number = {4693},
	urldate = {2018-07-01},
	journal = {Science},
	author = {Lipman, D. J. and Pearson, W. R.},
	month = mar,
	year = {1985},
	pmid = {2983426},
	pages = {1435--1441},
	file = {Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\U87NEENI\\Lipman and Pearson - 1985 - Rapid and sensitive protein similarity searches.pdf:application/pdf;Snapshot:C\:\\Users\\gaura\\Zotero\\storage\\G3DJYFTL\\1435.html:text/html}
}

@article{pearson_improved_1988,
	title = {Improved tools for biological sequence comparison.},
	volume = {85},
	issn = {0027-8424},
	url = {https://www.ncbi.nlm.nih.gov/pmc/articles/PMC280013/},
	abstract = {We have developed three computer programs for comparisons of protein and DNA sequences. They can be used to search sequence data bases, evaluate similarity scores, and identify periodic structures based on local sequence similarity. The FASTA program is a more sensitive derivative of the FASTP program, which can be used to search protein or DNA sequence data bases and can compare a protein sequence to a DNA sequence data base by translating the DNA data base as it is searched. FASTA includes an additional step in the calculation of the initial pairwise similarity score that allows multiple regions of similarity to be joined to increase the score of related sequences. The RDF2 program can be used to evaluate the significance of similarity scores using a shuffling method that preserves local sequence composition. The LFASTA program can display all the regions of local similarity between two sequences with scores greater than a threshold, using the same scoring parameters and a similar alignment algorithm; these local similarities can be displayed as a "graphic matrix" plot or as individual alignments. In addition, these programs have been generalized to allow comparison of DNA or protein sequences based on a variety of alternative scoring matrices.},
	number = {8},
	urldate = {2018-07-01},
	journal = {Proceedings of the National Academy of Sciences of the United States of America},
	author = {Pearson, W R and Lipman, D J},
	month = apr,
	year = {1988},
	pmid = {3162770},
	pmcid = {PMC280013},
	pages = {2444--2448},
	file = {PubMed Central Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\2XYGCNGR\\Pearson and Lipman - 1988 - Improved tools for biological sequence comparison..pdf:application/pdf}
}
@article{hughey_hidden_1996,
	title = {Hidden {Markov} models for sequence analysis: extension and analysis of the basic method},
	volume = {12},
	issn = {1367-4803},
	shorttitle = {Hidden {Markov} models for sequence analysis},
	url = {https://academic.oup.com/bioinformatics/article/12/2/95/257274},
	doi = {10.1093/bioinformatics/12.2.95},
	abstract = {Abstract.  Hidden Markov models (HMMs) are a highly effective means of modeling a family of unaligned sequences or a common motif within a set of unaligned sequ},
	language = {en},
	number = {2},
	urldate = {2018-06-30},
	journal = {Bioinformatics},
	author = {Hughey, Richard and Krogh, Anders},
	month = apr,
	year = {1996},
	pages = {95--107},
	file = {Full Text PDF:C\:\\Users\\gaura\\Zotero\\storage\\WZIE6HX6\\Hughey and Krogh - 1996 - Hidden Markov models for sequence analysis extens.pdf:application/pdf;Snapshot:C\:\\Users\\gaura\\Zotero\\storage\\JFMI5AM3\\257274.html:text/html}
}